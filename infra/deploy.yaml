apiVersion: apps/v1
kind: Deployment
metadata:
    name: bot-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ai-bot
    template:
        metadata:
            labels:
                app: ai-bot
        spec:
            containers:
                -   name: ai-bot
                    image: ghcr.io/order-of-devs/ai-bot:latest
                    imagePullPolicy: Always
                    env:
                        -   name: REDIS_HOST
                            value: redis-service
                        -   name: REDIS_PORT
                            value: "6379"
                        -   name: DISCORD_TOKEN
                            valueFrom:
                                secretKeyRef:
                                    name: discord-secret
                                    key: token
            imagePullSecrets:
                -   name: docker-github-com
---
apiVersion: v1
kind: Service
metadata:
    name: bot-service
spec:
    selector:
        app: ai-bot
    ports:
        -   protocol: TCP
            port: 80
            targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
    name: redis-service
    labels:
        app: redis-service
spec:
    type: ClusterIP
    ports:
        -   name: redis
            port: 6379
            targetPort: 6379
    selector:
        app: redis-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        tier: database
    spec:
      containers:
        - name: redis
          image: redis
          resources:
            requests:
              memory: "1Gi"
            limits:
              memory: "2Gi"
          ports:
            - containerPort: 6379
          command: ["redis-server", "--requirepass", "$(REDIS_PASSWORD)"]
          env:
            - name: REDIS_PASSWORD
              value: "dupa"
