[tool.poetry]
name = "discord-bot"
version = "0.1.0"
description = "Discord bot for Order of Devs"
authors = ["Mateusz Kubaszek"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
pre-commit = "^3.7.0"
discord-py = "^2.4.0"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
ruff = "^0.4.2"
black = "^24.4.2"
mypy = "^1.10.0"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.23.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D",       # Ignore pydocstyle checks
    "UP040",   # Checks for use of TypeAlias annotation for declaring type aliases
    "CPY001",  # Missing copyright notice at top of file
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `**values`
    "COM812",  # Checks for the absence of trailing commas
    "ISC001",  # Checks for implicitly concatenated strings on a single line
    "FIX002",  # Line contains TODO, consider resolving the issue
    "TCH001",  # first-party imports used only for type annotations not defined in a type-checking block
    "ANN101", # Missing type annotation for self in method
    "UP007",  # Unnecessary pass statement
]

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = [
    "S101",     # Use of assert detected
    "S105",     # Possible hardcoded password
    "S106",     # Possible hardcoded password
    "PLR0913",  # Too many arguments in function definition
    "PLR0917",  # Too many positional arguments in function call
    "PLR2004",  # Magic value used in comparison
    "PLR6301",  # Method could be a function or static method
    "FBT001",   # Boolean-typed positional argument in function definition
]
"**/{dependencies,endpoints,schemas,routes}*" = [
    "TCH001",  # first-party imports used only for type annotations not defined in a type-checking block
    "TCH002",  # third-party imports used only for type annotations not defined in a type-checking block
    "TCH003",  # standard library imports used only for type annotations not defined in a type-checking block
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.mypy]
strict = true
enable_error_code = [
    "explicit-override",
]
plugins = [
    "pydantic.mypy",
]

ignore_missing_imports = true
